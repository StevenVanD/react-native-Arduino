'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactEmotion = require('react-emotion');

var _reactEmotion2 = _interopRequireDefault(_reactEmotion);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var gripSize = 1;
var splitSize = 10;

var Wrapper = (0, _reactEmotion2.default)('div')(function (_ref) {
  var shift = _ref.shift,
      direction = _ref.direction;

  switch (direction) {
    case 'horizontal':
      {
        return {
          height: splitSize,
          marginTop: shift - splitSize / 2,
          marginBottom: -shift - splitSize / 2,
          position: 'relative'
        };
      }
    case 'vertical':
    default:
      {
        return {
          width: splitSize,
          marginLeft: shift - splitSize / 2,
          marginRight: -shift - splitSize / 2,
          position: 'relative'
        };
      }
  }
});

var Inner = (0, _reactEmotion2.default)('div')(function (_ref2) {
  var direction = _ref2.direction,
      theme = _ref2.theme;

  switch (direction) {
    case 'horizontal':
      {
        return {
          height: gripSize,
          width: 20,
          top: splitSize / 2 - (gripSize + 2) / 2,
          left: '50%',
          position: 'absolute',
          borderTop: theme.mainBorder,
          borderBottom: theme.mainBorder,
          borderTopWidth: 1,
          borderBottomWidth: 1
        };
      }
    case 'vertical':
    default:
      {
        return {
          width: gripSize,
          height: 20,
          left: splitSize / 2 - (gripSize + 2) / 2,
          top: '50%',
          position: 'absolute',
          borderLeft: theme.mainBorder,
          borderRight: theme.mainBorder,
          borderLeftWidth: 1,
          borderRightWidth: 1
        };
      }
  }
});

var USplit = function USplit(_ref3) {
  var shift = _ref3.shift,
      split = _ref3.split;
  return _react2.default.createElement(
    Wrapper,
    { direction: split, shift: shift },
    _react2.default.createElement(Inner, { direction: split })
  );
};

USplit.propTypes = {
  shift: _propTypes2.default.number,
  split: _propTypes2.default.oneOf(['vertical', 'horizontal'])
};

USplit.defaultProps = {
  shift: 0,
  split: 'vertical'
};

exports.default = USplit;